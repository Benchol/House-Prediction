{"version":3,"sources":["./src/environments/environment.ts","./src/app/@cores/services/predict-service.service.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/@cores/models/house.model.ts","./src/app/app-routing.module.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { House } from '../models/house.model';\n@Injectable({\n  providedIn: 'root'\n})\nexport class PredictServiceService {\n\n  apiUrl: string = \"http://localhost:5000/\";\n\n  constructor(private http: HttpClient) { }\n\n  predictHousePrice(house: House) {\n    return <Promise<number>>this.http.post<number>(`${this.apiUrl}api/`, { house }).toPromise();\n  }\n\n  getResultPrediction() {\n    return <Promise<number>>this.http.get<number>(`${this.apiUrl}`).toPromise();\n  }\n\n}\n","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { House } from './@cores/models/house.model';\nimport { PredictServiceService } from './@cores/services/predict-service.service';\n\nexport interface SelectBool {\n  value: boolean,\n  valueView: string\n}\n\nexport interface SelectType {\n  value: string,\n  valueView: string\n}\n\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent implements OnInit {\n  title = 'PredictionFrontEnd';\n  predictForm!: FormGroup;\n  selectedValue!: string;\n  formLabel: any[];\n  selectLabel: any[];\n  selectLabelType: SelectType[];\n  choiceBool: any[];\n  result!: number;\n  isOpen = false;\n  loading = false;\n\n\n  constructor(private formBuilder: FormBuilder, private resultService: PredictServiceService) {\n\n    this.initForm();\n\n    this.formLabel = [\n      {\n        label: \"Bedroom\",\n        icon: \"bed\",\n        type: \"number\",\n        unity: \"[ 1 - 20 ]\",\n        control: \"bedroom\"\n      },\n      {\n        label: \"Bathroom\",\n        icon: \"waves\",\n        type: \"number\",\n        unity: \"[ 1 - 20 ]\",\n        control: \"bathroom\"\n      },\n      {\n        label: \"Erf Size\",\n        icon: \"border_inner\",\n        type: \"number\",\n        unity: \"en m²\",\n        control: \"erf_size\"\n      },\n      {\n        label: \"Floor Size\",\n        icon: \"border_clear\",\n        type: \"number\",\n        unity: \"en m²\",\n        control: \"floor_size\"\n      },\n      {\n        label: \"Garage\",\n        icon: \"drive_eta\",\n        type: \"number\",\n        unity: \"[ 1 - 10 ]\",\n        control: \"garage\"\n      },\n      {\n        label: \"Rates and taxes\",\n        icon: \"payment\",\n        type: \"number\",\n        unity: \"en R\",\n        control: \"taxes\"\n      },\n      // {\n      //   label: \"Levies\",\n      //   icon: \"account_balance_wallet\",\n      //   type: \"number\",\n      //   unity: \"en R\"\n      // }\n    ];\n\n    this.selectLabel = [\n      {\n        label: \"Pool\",\n        icon: \"pool\",\n        type: \"text\",\n        values: [\n          {\n            value: 'yes'\n          },\n          {\n            value: 'no'\n          }\n        ],\n        unity: \"Yes / No\",\n        control: \"pool\",\n      },\n      {\n        label: \"Type\",\n        icon: \"merge_type\",\n        type: \"text\",\n        unity: \"type\",\n        control: \"type_property\",\n        values: [\n          {\n            value: 'House'\n          },\n          {\n            value: 'Appartment/Flat'\n          },\n          {\n            value: 'TownHouse'\n          }\n        ],\n      },\n      {\n        label: \"Pets Allowed\",\n        icon: \"pets\",\n        type: \"text\",\n        unity: \"Yes / No\",\n        control: \"pets\",\n        values: [\n          {\n            value: 'yes'\n          },\n          {\n            value: 'no'\n          }\n        ],\n      },\n    ];\n\n\n    this.selectLabelType = [\n      {\n        value: 'House',\n        valueView: 'House',\n      },\n      {\n        value: 'Appartement/Flat',\n        valueView: 'Appartement/Flat',\n      },\n      {\n        value: 'TownHouse',\n        valueView: 'TownHouse',\n      }\n    ];\n\n    this.choiceBool = [\n      {\n        value: true,\n        valueView: 'Yes',\n      },\n      {\n        value: false,\n        valueView: 'No',\n      }\n    ];\n\n  }\n\n  ngOnInit() {\n    console.log('cca');\n    this.result = 455;\n    this.onGetResultPrediction();\n\n  }\n\n  initForm() {\n    console.log('init form');\n    this.predictForm = this.formBuilder.group({\n      bedroom: [0, Validators.required],\n      bathroom: [0, Validators.required],\n      erf_size: [0, Validators.required],\n      floor_size: [0, Validators.required],\n      garage: [0, Validators.required],\n      taxes: [0, Validators.required],\n      type_property: [\"\", Validators.required],\n      pool: [false, Validators.required],\n      pets: [false, Validators.required],\n    });\n  }\n\n  onPredict() {\n\n    this.isOpen = !this.isOpen;\n\n    console.log('on predict form');\n\n    const bedroom = this.predictForm.get('bedroom')?.value;\n    console.log('bed : ', bedroom);\n    const bathroom = this.predictForm.get('bathroom')?.value;\n    const erf_size = this.predictForm.get('erf_size')?.value;\n    const floor_size = this.predictForm.get('floor_size')?.value;\n    const garage = this.predictForm.get('garage')?.value;\n    const taxes = this.predictForm.get('taxes')?.value;\n    let type_property = this.predictForm.get('type_property')?.value;\n    console.log('typeeee : ', type_property);\n\n    if (type_property == 'Appartement/Flat') {\n      type_property = 0;\n    } else if (type_property == 'House') {\n      type_property = 1;\n    } else {\n      type_property = 2;\n    }\n\n    let pool = this.predictForm.get('pool')?.value;\n    console.log('pool : ', pool);\n    if (pool == true) {\n      pool = 1;\n    } else {\n      pool = 0;\n    }\n\n    let pets = this.predictForm.get('pets')?.value;\n\n    if (pets == true) {\n      pets = 1;\n    } else {\n      pets = 0;\n    }\n\n    const house_to_predict = new House(bedroom, bathroom, erf_size, floor_size, type_property, pool, pets, taxes, garage);\n\n    console.log(\"House predicting... \", house_to_predict);\n\n    this.resultService.predictHousePrice(house_to_predict).then(price => {\n      this.result = price;\n      console.log('Price predict = ', this.result);\n    })\n    console.log('Get indray zao');\n\n    window.setTimeout(() => {\n      this.loading = !this.loading;\n    }, 3000);\n  }\n\n  closeResult() {\n    this.isOpen = !this.isOpen;\n  }\n\n  onGetResultPrediction() {\n    this.result = 0.61;\n  }\n\n}\n","<form [formGroup]=\"predictForm\" (ngSubmit)=\"onPredict()\">\n    <div class=\"container-form\">\n        <div class=\"container-content\">\n            <div class=\"img\">\n                <img src=\"../assets/house.jpg\" alt=\"\">\n            </div>\n            <div class=\"content\">\n                <div class=\"formGroup\">\n                    <mat-form-field appearance=\"standard\">\n                        <mat-label>Bedroom</mat-label>\n                        <input matInput placeholder=\"Placeholder\" type=\"number\" formControlName=\"bedroom\">\n                        <mat-icon matSuffix>bed</mat-icon>\n                        <mat-hint>[ 1 - 20 ]</mat-hint>\n                    </mat-form-field>\n                </div>\n\n                <div class=\"formGroup\">\n                    <mat-form-field appearance=\"standard\">\n                        <mat-label>Bathroom</mat-label>\n                        <input matInput placeholder=\"Placeholder\" type=\"number\" formControlName=\"bathroom\">\n                        <mat-icon matSuffix>waves</mat-icon>\n                        <mat-hint>[ 1 - 20 ]</mat-hint>\n                    </mat-form-field>\n                </div>\n\n                <div class=\"formGroup\">\n                    <mat-form-field appearance=\"standard\">\n                        <mat-label>Erf Size</mat-label>\n                        <input matInput placeholder=\"Placeholder\" type=\"number\" formControlName=\"erf_size\">\n                        <mat-icon matSuffix>border_inner</mat-icon>\n                        <mat-hint>en m²</mat-hint>\n                    </mat-form-field>\n                </div>\n\n\n                <div class=\"formGroup\">\n                    <mat-form-field appearance=\"standard\">\n                        <mat-label>Floor Size</mat-label>\n                        <input matInput placeholder=\"Placeholder\" type=\"number\" formControlName=\"floor_size\">\n                        <mat-icon matSuffix>border_clear</mat-icon>\n                        <mat-hint>en m²</mat-hint>\n                    </mat-form-field>\n                </div>\n\n                <div class=\"formGroup\">\n                    <mat-form-field appearance=\"standard\">\n                        <mat-label>Garage</mat-label>\n                        <input matInput placeholder=\"Placeholder\" type=\"number\" formControlName=\"garage\">\n                        <mat-icon matSuffix>drive_eta</mat-icon>\n                        <mat-hint>[ 1 - 10 ]</mat-hint>\n                    </mat-form-field>\n                </div>\n\n                <div class=\"formGroup\">\n                    <mat-form-field appearance=\"standard\">\n                        <mat-label>Rates and taxes</mat-label>\n                        <input matInput placeholder=\"Placeholder\" type=\"number\" formControlName=\"taxes\">\n                        <mat-icon matSuffix>payment</mat-icon>\n                        <mat-hint>en R</mat-hint>\n                    </mat-form-field>\n                </div>\n\n                <div class=\"formGroup\">\n                    <mat-form-field appearance=\"standard\">\n                        <mat-label>Type d' appartement</mat-label>\n                        <mat-select name=\"select\" formControlName=\"type_property\">\n                            <mat-option *ngFor=\"let select of selectLabelType\" [value]=\"select.value\">\n                                {{select.valueView}}\n                            </mat-option>\n                        </mat-select>\n                        <mat-icon matSuffix>home</mat-icon>\n                        <mat-hint>Type</mat-hint>\n                    </mat-form-field>\n                </div>\n\n                <div class=\"formGroup\">\n                    <mat-form-field appearance=\"standard\">\n                        <mat-label>Pool</mat-label>\n                        <mat-select name=\"select\" formControlName=\"pool\">\n                            <mat-option *ngFor=\"let select of choiceBool\" [value]=\"select.value\">\n                                {{select.valueView}}\n                            </mat-option>\n                        </mat-select>\n                        <mat-icon matSuffix>pool</mat-icon>\n                        <mat-hint>Pool</mat-hint>\n                    </mat-form-field>\n                </div>\n                <div class=\"formGroup\">\n                    <mat-form-field appearance=\"standard\">\n                        <mat-label>Pets allowed</mat-label>\n                        <mat-select name=\"select\" formControlName=\"pets\">\n                            <mat-option *ngFor=\"let select of choiceBool\" [value]=\"select.value\">\n                                {{select.valueView}}\n                            </mat-option>\n                        </mat-select>\n                        <mat-icon matSuffix>pets</mat-icon>\n                        <mat-hint>Pets</mat-hint>\n                    </mat-form-field>\n                </div>\n                <div class=\"formGroup none\"></div>\n                <div class=\"formGroup none\"></div>\n                <div class=\"formGroup btn-predict\">\n                    <button class=\"btn\" type=\"submit\">Predict</button>\n                </div>\n            </div>\n        </div>\n    </div>\n\n</form>\n\n\n<div class=\"container-result\" [ngClass]=\"{'d-none': !isOpen, 'display': isOpen, 'op0': !isOpen, 'op1': isOpen}\">\n    <div class=\"container\">\n        <div class=\"back\" (click)=\"onPredict()\">\n            <mat-icon>arrow_back</mat-icon>\n        </div>\n        <div class=\"content\" *ngIf=\"loading\">\n            <span>\n        <mat-icon>attach_money</mat-icon>\n        <mat-icon>attach_money</mat-icon>\n        <mat-icon>attach_money</mat-icon>\n      </span> House price prédiction : {{ result }} R\n\n        </div>\n        <div class=\"content\" *ngIf=\"!loading\">\n            <mat-spinner></mat-spinner>\n        </div>\n    </div>\n</div>","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatIconModule } from '@angular/material/icon';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { HttpClientModule } from '@angular/common/http';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    BrowserAnimationsModule,\n    MatSelectModule,\n    MatFormFieldModule,\n    MatInputModule,\n    MatIconModule,\n    MatProgressSpinnerModule,\n    FormsModule,\n    ReactiveFormsModule,\n    HttpClientModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","export class House {\n  bedroom: number;\n  bathroom: number;\n  erf_size: number;\n  floor_size: number;\n  type_property: string;\n  pool: boolean;\n  pets_allowed: boolean;\n  taxes: number;\n  garage: number;\n\n  constructor(\n    _bed: number,\n    _bath: number,\n    _erf: number,\n    _floor: number,\n    _type: string,\n    _pool: boolean,\n    _pets: boolean,\n    _taxes: number,\n    _garage: number\n  ) {\n    this.bedroom = _bed;\n    this.bathroom = _bath;\n    this.erf_size = _erf;\n    this.floor_size = _floor;\n    this.type_property = _type;\n    this.pool = _pool;\n    this.pets_allowed = _pets;\n    this.taxes = _taxes;\n    this.garage = _garage;\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}